---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: azure-permissions-checker-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: azure-permissions-checker-role
rules:
- apiGroups: ["permissions.azure.com"]
  resources: ["azpermissions"]
  verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
- apiGroups: ["permissions.azure.com"]
  resources: ["azpermissions/status"]
  verbs: ["get", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azure-permissions-checker-binding
subjects:
- kind: ServiceAccount
  name: azure-permissions-checker-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: azure-permissions-checker-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-permissions-checker
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-permissions-checker
  template:
    metadata:
      labels:
        app: azure-permissions-checker
    spec:
      serviceAccountName: azure-permissions-checker-sa
      restartPolicy: Always
      containers:
      - name: azure-permissions-checker
        image: ejreed/azure-permissions-checker:v1.0.0-alpha.1
        imagePullPolicy: Always
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        args:
        - "-v=5"
        env:
        - name: AZURE_CREDENTIAL_FILE
          valueFrom:
            configMapKeyRef:
              name: azure-cred-file
              key: path
              optional: true
        volumeMounts:
        - name: azure-cred
          mountPath: /etc/kubernetes/
      volumes:
        - name: azure-cred
          hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
